<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--부가적인 빈 설정, 초기화 작업을 해주는 후처리기 등록    -->
    <context:annotation-config />

    <!--DB-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/toby?characterEncoding=UTF-8" />
        <property name="username" value="jimmy" />
        <property name="password" value="12345" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- AOP @Transactional이 붙은 타입과 메서드에 부가기능을 담은 프록시를 추가하도록 만드는 후처리기 등록-->
    <tx:annotation-driven />

    <bean id="userDao" class="toby.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource" />
        <property name="sqlService" ref="sqlService" />
    </bean>

    <bean id="sqlService" class="toby.service.XmlSqlService">
<!--        <property name="sqlReader" ref="sqlService" />-->
<!--        <property name="sqlRegistry" ref="sqlService" />-->
        <property name="sqlmapFile" value="sqlmap.xml" />
    </bean>

    <bean id="userService" class="toby.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>

    <bean id="mailSender" class="toby.service.DummyMailSender" />



    <bean id="transactionAdvice" class="toby.aop.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
    </bean>
    <!--   set advisor = advice + pointcut     -->
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

</beans>